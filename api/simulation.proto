syntax = "proto3";

package api;

option go_package="api";

message SimMsg {
    uint64 msg_id = 1;
    uint64 sender_id = 2;
    MsgType type = 3;

    oneof data {
        SetAgentRequest set_agent_request = 4;
        SetAgentResponse set_agent_response = 5;
        RegisterProviderRequest register_provider_request = 6;
        RegisterProviderResponse register_provider_response = 7;
        UpdateProvidersRequest update_providers_request = 8;
        UpdateProvidersResponse update_providers_response = 9;
        SetClockRequest set_clock_request = 10;
        SetClockResponse set_clock_response = 11;
        StartClockRequest start_clock_request = 12;
        StartClockResponse start_clock_response = 13;
        StopClockRequest stop_clock_request = 14;
        StopClockResponse stop_clock_response = 15;
        ForwardClockRequest forward_clock_request = 16;
        ForwardClockResponse forward_clock_response = 17;
        ForwardClockInitRequest forward_clock_init_request = 18;
        ForwardClockInitResponse forward_clock_init_response = 19;
        ForwardClockMainRequest forward_clock_main_request = 20;
        ForwardClockMainResponse forward_clock_main_response = 21;
        ForwardClockTerminateRequest forward_clock_terminate_request = 22;
        ForwardClockTerminateResponse forward_clock_terminate_response = 23;
        GetAgentRequest get_agent_request = 24;
        GetAgentResponse get_agent_response = 25;
        SendAreaInfoRequest send_area_info_request = 26;
        SendAreaInfoResponse send_area_info_response = 27;
    }
}


enum MsgType {
    SET_AGENT_REQUEST = 0;
    SET_AGENT_RESPONSE = 1;
    GET_AGENT_REQUEST = 2;
    GET_AGENT_RESPONSE = 3;
	REGISTER_PROVIDER_REQUEST = 4;
    REGISTER_PROVIDER_RESPONSE = 5;
	UPDATE_PROVIDERS_REQUEST = 6;
    UPDATE_PROVIDERS_RESPONSE = 7;
	SET_CLOCK_REQUEST = 8;
    SET_CLOCK_RESPONSE = 9;
	START_CLOCK_REQUEST = 10;
    START_CLOCK_RESPONSE = 11;
	STOP_CLOCK_REQUEST = 12;
    STOP_CLOCK_RESPONSE = 13;
	FORWARD_CLOCK_REQUEST = 14;
    FORWARD_CLOCK_RESPONSE = 15;
    FORWARD_CLOCK_INIT_REQUEST = 16;
    FORWARD_CLOCK_INIT_RESPONSE = 17;
    FORWARD_CLOCK_MAIN_REQUEST = 18;
    FORWARD_CLOCK_MAIN_RESPONSE = 19;
    FORWARD_CLOCK_TERMINATE_REQUEST = 20;
    FORWARD_CLOCK_TERMINATE_RESPONSE = 21;
    SEND_AREA_INFO_REQUEST = 22;
    SEND_AREA_INFO_RESPONSE = 23;
}

enum StatusType {
    OK = 0;
    ERROR = 1;
}

enum ChannelType {
    NONE = 0;
    CLOCK = 1;
    AGENT = 2;
    PROVIDER = 3;
    AREA = 4;
}


message SendAreaInfoRequest {
    repeated Area areas = 1;
}

message SendAreaInfoResponse {
}

message RegisterProviderRequest {
    Provider provider = 1;
}

message RegisterProviderResponse {
    Provider provider = 1;
}

message UpdateProvidersRequest {
    repeated Provider providers = 1;
}

message UpdateProvidersResponse {
}

message SetClockRequest {
    Clock clock = 1;
}

message SetClockResponse {
}

message SetAgentRequest {
    repeated Agent agents = 1;
}

message SetAgentResponse {
}

message GetAgentRequest {
}

message GetAgentResponse {
    repeated Agent agents = 1;
}

message StartClockRequest {
	
}

message StartClockResponse {
}

message ForwardClockRequest {
	Clock clock = 1;
}

message ForwardClockResponse {
}

message ForwardClockInitRequest {
	Clock clock = 1;
}

message ForwardClockInitResponse {
}

message ForwardClockMainRequest {
	Clock clock = 1;
}

message ForwardClockMainResponse {
}

message ForwardClockTerminateRequest {
	Clock clock = 1;
}

message ForwardClockTerminateResponse {
}

message StopClockRequest {
}

message StopClockResponse {
}

message Provider {
    enum Type {
        MASTER = 0;
        WORKER = 1;
        AGENT = 2;
        VISUALIZATION = 3;
        GATEWAY = 4;
        DATABASE = 5;
    }

	uint64 id = 1;
	string name = 2;
    Type type = 3;
	string address = 5;
    ClientIds client_ids = 6;
    oneof data {
		AgentStatus agent_status = 7;
		VisualizationStatus visualization_status = 8;
		ClockStatus clock_status = 9;
	}
}

message AgentStatus {
	Area area = 1;
    AgentType agent_type = 2;
	uint64 agent_num = 3;
}

message VisualizationStatus {
	Area area = 1;
}

message ClockStatus {
}


message ClientIds {
    uint64 clock_service = 1;
    uint64 agent_service = 2;
    uint64 provider_service = 3;
}


message Clock {
    double global_time = 1;
}

message Agent {
    uint64 id = 1;
	string name = 2;
    AgentType type = 3;
    Route route = 4;
}

enum AgentType {
    PEDESTRIAN = 0;
    CAR = 1;
}

message Route {
    Coord position = 1;
    double direction = 2;
    double speed = 3;
    Coord destination = 4;
    Coord departure = 5;
    repeated Coord transit_points = 6;
    Coord next_transit = 7;
    double total_distance = 8;
    double required_time = 9;
}

message Coord {
    double latitude = 1;
    double longitude = 2;
}

message Area {
    uint64 id = 1;
    string name = 2;
    repeated Coord duplicate_area = 3;
    repeated Coord control_area = 4;
}